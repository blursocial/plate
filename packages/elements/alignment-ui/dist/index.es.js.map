{"version":3,"file":"index.es.js","sources":["../src/ToolbarAlign/ToolbarAlign.tsx"],"sourcesContent":["import React from 'react';\nimport { Alignment, setAlign } from '@udecode/plate-alignment';\nimport {\n  getPreventDefaultHandler,\n  isCollapsed,\n  someNode,\n} from '@udecode/plate-common';\nimport { useEventEditorId, useStoreEditorState } from '@udecode/plate-core';\nimport { ToolbarButton, ToolbarButtonProps } from '@udecode/plate-toolbar';\n\nexport interface ToolbarAlignProps extends ToolbarButtonProps {\n  align: Alignment;\n}\n\nexport const ToolbarAlign = ({ align, ...props }: ToolbarAlignProps) => {\n  const editor = useStoreEditorState(useEventEditorId('focus'));\n\n  return (\n    <ToolbarButton\n      active={\n        isCollapsed(editor?.selection) &&\n        someNode(editor!, { match: { align } })\n      }\n      onMouseDown={\n        editor\n          ? getPreventDefaultHandler(setAlign, editor, {\n              align,\n            })\n          : undefined\n      }\n      {...props}\n    />\n  );\n};\n"],"names":["ToolbarAlign","align","props","editor","useStoreEditorState","useEventEditorId","isCollapsed","selection","someNode","match","getPreventDefaultHandler","setAlign","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;MAcaA,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAA4C;AACtE,QAAMC,MAAM,GAAGC,mBAAmB,CAACC,gBAAgB,CAAC,OAAD,CAAjB,CAAlC;AAEA,sBACE,oBAAC,aAAD;AACE,IAAA,MAAM,EACJC,WAAW,CAACH,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEI,SAAT,CAAX,IACAC,QAAQ,CAACL,MAAD,EAAU;AAAEM,MAAAA,KAAK,EAAE;AAAER,QAAAA;AAAF;AAAT,KAAV,CAHZ;AAKE,IAAA,WAAW,EACTE,MAAM,GACFO,wBAAwB,CAACC,QAAD,EAAWR,MAAX,EAAmB;AACzCF,MAAAA;AADyC,KAAnB,CADtB,GAIFW;AAVR,KAYMV,KAZN,EADF;AAgBD;;;;"}